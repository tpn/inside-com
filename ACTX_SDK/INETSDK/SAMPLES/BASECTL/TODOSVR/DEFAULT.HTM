<HTML>

<HEAD>
<TITLE>TODOSVR: Sample Document Object Server and OLE Control</TITLE>
</HEAD>

<BODY>

<H2>TODOSVR</H2>
<P>
ToDoSvr is a simple example of a combination OLE Control and Document Object server based on the OLE Controls Framework sample code. Generic extensions to the framework which would apply to any Document Object server are contained in the class CDocumentObject, which is defined in cdocobj.h. Any code which is specific to making ToDoSvr act as a Document Object is marked with a comment containing the word DOCOBJ. Any code which is specific to hyperlinking support is marked with a comment containing the work HLINK.

<H3>Building ToDoSvr</H3>
<P>
Before attempting to build ToDoSvr, first run setenv.bat to be sure the Internet SDK include, bin, and lib directories are included in your environment.

<P>
ToDoSvr depends on the FrameWrk sample, which must be built first. To build a debug version of the framework library, use the command line <I>nmake</I> from the FrameWrk directory. To build a retail version of the framework, use the command line  <I>nmake nodebug=1</I> from the FrameWrk directory. Debug and retail libraries are placed in the FrameWrk\Debug and FrameWrk\Retail subdirectories, respectively.

<P>
After building the FrameWrk library you can build the ToDoSvr control by moving to the ToDoSvr directory and entering the command <I>nmake</I> to build a debug version, or <I>nmake nodebug=1</I>to build a retail version. The ToDoSvr sample will be automatically registered as part of the build process.

<H3>What ToDoSvr Does</H3>
<P>
In its current state, ToDoSvr shows nothing more than the minimal amount of code required to act as a Document Object from within Office Binder. It does not manage any data and it doesn't display anything.

<P>
In its completed form, ToDoSvr will be a simple to-do list manager that can act as a Document Object within any Document Object container. A to-do list consists of a collection of tasks. A task consists of the following information:
<UL>
   <LI>task description
   <LI>priority
   <LI>due date
   <LI>status
   <LI>hyperlink to the primary document associated with the task
</UL>
ToDoSvr will expose a simple object model which lets you manage this information via OLE automation. In addition to providing hyperlinks to documents you are working on, ToDoSvr objects will act as hyperlink targets, so that you can easily jump to particular tasks.

<H3>Running ToDoSvr</H3>
<P>
After you have built and registered ToDoSvr, start Office Binder, then select the <I>Section|Add...</I> command. From the list of available document types, choose <I>ToDoCtl Object</I>. The window which is displayed is the ToDoSvr window.

<!--When ToDoSvr is completed: After you have built and registered ToDoSvr, you can see it in action by clicking <A HREF="file:sample.tdo">here</A> to bring up a sample to-do list.-->

<H3>Known Problems</H3>
<OL>
   <LI>ToDoSvr does not do anything at the moment. It does not manage any data, expose any OLE 
       automation model,  or use hyperlinks. All you can do is insert a ToDoSvr object into
       a control container or DocObject container. You will see a empty rectangle where there
       should be the server's data.
</OL>

<P>
<B>Keywords:</B> OLE Control, Document Object, DocObject, DocObj, Hyperlink, HLink, IOleDocument, IOleDocumentView, IOleCommandTarget, IPrint, IHlinkTarget, IHlinkSite, HlinkCreateFromString.




</BODY>
</HTML>
