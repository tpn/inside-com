<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>Overview of the Win32 Internet Functions</TITLE>
<STYLE>
#tctop {color: red}
#cpslug {color: red; text-decoration: none}
</STYLE>
</HEAD>
<BODY TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#000000" ALINK="#000000">
<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<TABLE BORDER=0 ALIGN=RIGHT><TR><TD VALIGN=TOP>
<A HREF="sweep080.htm" TARGET="TEXT"><IMG SRC="art/previous.gif" WIDTH="50" HEIGHT="20"  BORDER=0 ALT="Previous"></A>
</TD>
<TD VALIGN=TOP><A HREF="sweep000.htm" TARGET="TEXT"><IMG SRC="art/contents.gif" WIDTH="50" HEIGHT="20"  BORDER=0 ALT="Up"></A>
</TD>
<TD VALIGN=TOP><A HREF="index.htm" TARGET="TEXT"><IMG SRC="art/index.gif" WIDTH="50" HEIGHT="20"  BORDER=0 ALT="Index"></A>
</TD>
<TD VALIGN=TOP><A HREF="sweep082.htm" TARGET="TEXT"><IMG SRC="art/next.gif" WIDTH="50" HEIGHT="20"  BORDER=0 ALT="Next"></A>
</TD></TABLE>
<H2><A NAME="wininet_0008000102000000">Overview of the Win32 Internet Functions</A></H2>
<BR CLEAR=ALL>
<P>The following table summarizes the Win32 Internet functions. Each function indicates any functions that it is dependent on. A dependent function can be called only after the related higher-level function is called. This is because the higher-level function returns a handle and sets up a state at the protocol level that is a prerequisite to the successful execution of the dependent function or functions.

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><B>General Win32 Internet Functions</B>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000c00" TARGET=TEXT>InternetOpen</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Initializes the application's use of the Win32 Internet functions and creates the root HINTERNET handle 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Opens an FTP, Gopher, or HTTP session with a server. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000c00" TARGET=TEXT>InternetOpen</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000300" TARGET=TEXT>InternetCloseHandle</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Closes any designated handle created by a Win32 Internet function and any handles derived from that handle.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000f00" TARGET=TEXT>InternetQueryOption</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Queries the setting of an Internet option.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103001200" TARGET=TEXT>InternetSetOption</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Sets an Internet option.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103001400" TARGET=TEXT>InternetSetStatusCallback</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Sets a callback function that is called with status information. Assigns a callback function to the designated HINTERNET handle and all of the handles derived from it.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103001500" TARGET=TEXT>InternetStatusCallback</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">This is a placeholder for the application-defined status callback.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000600" TARGET=TEXT>InternetConfirmZoneCrossing</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Checks for changes between secure and non-secure URLs.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103001600" TARGET=TEXT>InternetTimeFromSystemTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Formats a date and time according to the specified RFC format (as specified in the HTTP version 1.0 specification).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103001700" TARGET=TEXT>InternetTimeToSystemTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Takes an HTTP time/date string and converts it to a <B>SYSTEMTIME</B> structure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000100" TARGET=TEXT>InternetAttemptConnect</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Allows an application to attempt to connect to the Internet before issuing any requests.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103001000" TARGET=TEXT>InternetReadFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Dowloads data from the Internet. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A>, <A HREF="sweep083.htm#wininet_0008000104000600" TARGET=TEXT>FtpOpenFile</A>, <A HREF="sweep084.htm#wininet_0008000105000600" TARGET=TEXT>GopherOpenFile</A>, or <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103001100" TARGET=TEXT>InternetSetFilePointer</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Sets the position for the next read in a file. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> (on an HTTP URL only) or a handle created by <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A> using the GET method.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000a00" TARGET=TEXT>InternetFindNextFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Continues file enumeration or search. This function requires a handle created by <A HREF="sweep083.htm#wininet_0008000104000300" TARGET=TEXT>FtpFindFirstFile</A> or <A HREF="sweep084.htm#wininet_0008000105000300" TARGET=TEXT>GopherFindFirstFile</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000e00" TARGET=TEXT>InternetQueryDataAvailable</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Queries the amount of data available. This function requires a handle created by <A HREF="sweep083.htm#wininet_0008000104000600" TARGET=TEXT>FtpOpenFile</A>, <A HREF="sweep084.htm#wininet_0008000105000600" TARGET=TEXT>GopherOpenFile</A>, or <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000b00" TARGET=TEXT>InternetGetLastResponseInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Retrieves the text of the server's response to the FTP command. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103001800" TARGET=TEXT>InternetWriteFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Writes data to an open file. This function requires a handle created by <A HREF="sweep083.htm#wininet_0008000104000600" TARGET=TEXT>FtpOpenFile</A>.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000700" TARGET=TEXT>InternetCrackUrl</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Parses a URL string into components.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000800" TARGET=TEXT>InternetCreateUrl</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Creates a URL string from components.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000200" TARGET=TEXT>InternetCanonicalizeUrl</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Converts a URL to a canonical form.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000400" TARGET=TEXT>InternetCombineUrl</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Combines base and relative URLs.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Begins retrieving a complete FTP, Gopher, or HTTP URL. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000c00" TARGET=TEXT>InternetOpen</A>.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><B>FTP Functions</B>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep083.htm#wininet_0008000104000300" TARGET=TEXT>FtpFindFirstFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Starts file enumeration or file search in the current directory. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep083.htm#wininet_0008000104000500" TARGET=TEXT>FtpGetFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Retrieves an entire file from the server. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep083.htm#wininet_0008000104000700" TARGET=TEXT>FtpPutFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Writes an entire file to the server. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep083.htm#wininet_0008000104000200" TARGET=TEXT>FtpDeleteFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Deletes a file on the server. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep083.htm#wininet_0008000104000900" TARGET=TEXT>FtpRenameFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Renames a file on the server. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep083.htm#wininet_0008000104000600" TARGET=TEXT>FtpOpenFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Initiates access to a file on the server for either reading or writing. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep083.htm#wininet_0008000104000100" TARGET=TEXT>FtpCreateDirectory</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Creates a new directory on the server. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep083.htm#wininet_0008000104000800" TARGET=TEXT>FtpRemoveDirectory</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Deletes a directory on the server. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep083.htm#wininet_0008000104000a00" TARGET=TEXT>FtpSetCurrentDirectory</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Changes the client's current directory on the server. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep083.htm#wininet_0008000104000400" TARGET=TEXT>FtpGetCurrentDirectory</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Returns the client's current directory on the server. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><B>Gopher Functions</B>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep084.htm#wininet_0008000105000300" TARGET=TEXT>GopherFindFirstFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Starts enumerating a Gopher directory listing. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep084.htm#wininet_0008000105000600" TARGET=TEXT>GopherOpenFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Starts retrieving a Gopher object. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep084.htm#wininet_0008000105000100" TARGET=TEXT>GopherCreateLocator</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Forms a Gopher locator for use in other Gopher function calls.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep084.htm#wininet_0008000105000400" TARGET=TEXT>GopherGetAttribute</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Retrieves attribute information on the Gopher object. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><B>HTTP (World Wide Web) Functions</B>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Opens an HTTP request handle. This function requires a handle created by <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep085.htm#wininet_0008000106000100" TARGET=TEXT>HttpAddRequestHeaders</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Adds HTTP request headers to the HTTP request handle. This function requires a handle created by <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep085.htm#wininet_0008000106000400" TARGET=TEXT>HttpSendRequest</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Sends the specified request to the HTTP server. This function requires a handle created by <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep085.htm#wininet_0008000106000300" TARGET=TEXT>HttpQueryInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Queries information about an HTTP request. This function requires a handle created by 
<A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep082.htm#wininet_0008000103000900" TARGET=TEXT>InternetErrorDlg</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Displays predefined dialog boxes for common Internet error conditions. Requires the handle used in the call to the function <A HREF="sweep085.htm#wininet_0008000106000400" TARGET=TEXT>HttpSendRequest</A>.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><B>Cookie Functions</B>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep086.htm#wininet_0008000107000100" TARGET=TEXT>InternetGetCookie</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Returns cookies for the specified URL and all its parent URLs.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep086.htm#wininet_0008000107000200" TARGET=TEXT>InternetSetCookie</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Sets a cookie on the specified URL.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><B>Cache Functions</B>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep087.htm#wininet_0008000108020100" TARGET=TEXT>CommitUrlCacheEntry</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Caches data in the specified file in the cache storage and associates it with the given URL.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep087.htm#wininet_0008000108020200" TARGET=TEXT>CreateUrlCacheEntry</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Allocates the requested cache storage and creates a local file name for saving the cache entry corresponding to the source name.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep087.htm#wininet_0008000108020300" TARGET=TEXT>GetUrlCacheEntryInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Retrieves information about a cache entry.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep087.htm#wininet_0008000108020400" TARGET=TEXT>ReadUrlCacheEntryStream</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Reads the cached data from a stream that has been opened using <B>RetrieveUrlCacheEntryStream</B>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep087.htm#wininet_0008000108020500" TARGET=TEXT>RetrieveUrlCacheEntryFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Retrieves a cache entry from the cache in the form of a file.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep087.htm#wininet_0008000108020600" TARGET=TEXT>RetrieveUrlCacheEntryStream</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Provides the most efficient and implementation-independent way of accessing the cache data.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep087.htm#wininet_0008000108020700" TARGET=TEXT>SetUrlCacheEntryInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Sets the specified members of the <A HREF="sweep088.htm#wininet_0008000109000400" TARGET=TEXT>INTERNET_CACHE_ENTRY_INFO</A> structure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep087.htm#wininet_0008000108020800" TARGET=TEXT>UnlockUrlCacheEntryFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Unlocks the cache entry that was locked while the file was retrieved for use from the cache.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep087.htm#wininet_0008000108020900" TARGET=TEXT>UnlockUrlCacheEntryStream</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Closes the stream that has been retrieved using <B>RetrieveUrlCacheEntryStream</B>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep087.htm#wininet_0008000108030100" TARGET=TEXT>DeleteUrlCacheEntry</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Removes the file associated with the source name from the cache, if the file exists.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep087.htm#wininet_0008000108030200" TARGET=TEXT>FindCloseUrlCache</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Closes the specified enumeration handle.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep087.htm#wininet_0008000108030300" TARGET=TEXT>FindFirstUrlCacheEntry</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Begins the enumeration of the cache.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2"><A HREF="sweep087.htm#wininet_0008000108030400" TARGET=TEXT>FindNextUrlCacheEntry</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="ARIAL,HELVETICA" SIZE="2">Retrieves the next entry in the cache.
</FONT></TD></TR></TABLE>
<H3><A NAME="wininet_0008000102010000">Handles</A></H3>
<P>The handles that are created and used by the Win32 Internet functions are opaque handle types called HINTERNETS. These handles returned by the Win32 Internet function APIs are not interchangeable with the base Win32 handles, so they cannot be used with Win32 APIs such as <B>ReadFile</B> or <B>CloseHandle</B>. Similarly, base Win32 handles cannot be used with the Win32 Internet function APIs. For example, a handle returned by <B>CreateFile</B> cannot be passed to <A HREF="sweep082.htm#wininet_0008000103001000" TARGET=TEXT>InternetReadFile</A>.

<P>If a callback function was registered for a handle, all operations on that handle can generate status indications, provided that the context value that was supplied when the handle was created was not zero. Providing a zero context value is a method to force an operation to complete synchronously, even though INTERNET_FLAG_ASYNC was specified in <A HREF="sweep082.htm#wininet_0008000103000c00" TARGET=TEXT>InternetOpen</A>.

<P>Status indications are mainly intended to give the application feedback as to the progress of an operation, and are mainly concerned with network operations, such as resolving a host name, connecting to a server, and receiving data. Three special-purpose status indications can be made for a handle:

<UL><LI>INTERNET_STATUS_REQUEST_COMPLETE is indicated when an asynchronous operation completes.
<LI>INTERNET_STATUS_HANDLE_CREATED is indicated when the handle is initially created.
<LI>INTERNET_STATUS_HANDLE_CLOSING is the last status indication that will be made for a handle. 
</UL>
<P>The application must check the <B>INTERNET_ASYNC_RESULTS</B> structure to determine whether the operation succeeded or failed after receiving an INTERNET_STATUS_REQUEST_COMPLETE indication. 

<P>The <A HREF="sweep082.htm#wininet_0008000103000300" TARGET=TEXT>InternetCloseHandle</A> function closes handles of type HINTERNET and all handles that descended from it in the <A HREF="sweep081.htm#wininet_0008000102020000" TARGET=TEXT>Handle Hierarchy</A> function. Note that handle values are recycled quickly; therefore, if a handle is closed and a new handle is generated immediately, there is a good chance that the new handle will have the same value as the handle just closed.



<H3><A NAME="wininet_0008000102020000">Handle Hierarchy</A></H3>
<P>Handles returned from Win32 Internet functions are maintained in a tree hierarchy. The handle returned by the <A HREF="sweep082.htm#wininet_0008000103000c00" TARGET=TEXT>InternetOpen</A> function is the root node. Handles returned from the <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A> function occupy the next level. Currently, handles that are returned by open or find functions, such as <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A> and <A HREF="sweep083.htm#wininet_0008000104000300" TARGET=TEXT>FtpFindFirstFile</A>, are the leaf nodes. This structure can be used by <A HREF="sweep082.htm#wininet_0008000103000300" TARGET=TEXT>InternetCloseHandle</A> to close a single handle or an entire subtree.



<H3><A NAME="wininet_0008000102030000">Multithreaded Access</A></H3>
<P>The Win32 Internet functions are "reentrant" in the sense that there can be multiple calls to an individual function from different threads. The functions complete any necessary synchronization. However, multiple simultaneous calls using the same Internet connection can lead to unpredictable results.

<P>For example, if an application has used <A HREF="sweep083.htm#wininet_0008000104000600" TARGET=TEXT>FtpOpenFile</A> to begin downloading a file from an FTP server, and two threads simultaneously make calls to <A HREF="sweep082.htm#wininet_0008000103001000" TARGET=TEXT>InternetReadFile</A>, there is no guarantee which call will be completed first, or which thread will receive file data first. Applications that use multiple threads for the same Internet connection are responsible for synchronization between threads to ensure a predictable return of information.




<H3><A NAME="wininet_0008000102040000">Error Handling</A></H3>
<P>The Win32 Internet functions return error information in the same way as Win32 functions. Return values tell whether the function is successful or not. For example, some Internet functions return a BOOL value that is TRUE if the function succeeded or FALSE if it failed, and others return a handle of type HINTERNET. A NULL handle indicates that the function failed, and any other value indicates that it succeeded. 

<P>If a function fails, the application can call the Win32 Internet function <B>GetLastError</B> to retrieve the specific error code for the failure. In addition, the FTP and Gopher protocols let servers return additional error information. For these protocols, applications can use the <A HREF="sweep082.htm#wininet_0008000103000b00" TARGET=TEXT>InternetGetLastResponseInfo</A> function to retrieve error text.

<P>Both <B>GetLastError</B> and <A HREF="sweep082.htm#wininet_0008000103000b00" TARGET=TEXT>InternetGetLastResponseInfo</A> operate on a per-thread basis. If two threads call Internet functions at the same time, error information will be returned for each of the individual threads so that there is no conflict between the threads. 






<H3><A NAME="wininet_0008000102050000">Unicode Support</A></H3>
<P>The Win32 Internet functions do not currently provide support for Unicode. However, support will be provided in future versions.






<H3><A NAME="wininet_0008000102060000">API Flags</A></H3>
<P>Many of the Win32 Internet functions accept a double-word array of flags as a parameter. The following is a brief description of the defined flags:

<DL>
<DT>INTERNET_FLAG_RELOAD
 </DT><DD>Force a download of the requested file, object, or directory listing from the origin server, not from the cache. The <A HREF="sweep084.htm#wininet_0008000105000300" TARGET=TEXT>GopherFindFirstFile</A>, <A HREF="sweep084.htm#wininet_0008000105000600" TARGET=TEXT>GopherOpenFile</A>, <A HREF="sweep083.htm#wininet_0008000104000300" TARGET=TEXT>FtpFindFirstFile</A>, <A HREF="sweep083.htm#wininet_0008000104000500" TARGET=TEXT>FtpGetFile</A>, <A HREF="sweep083.htm#wininet_0008000104000600" TARGET=TEXT>FtpOpenFile</A>, <A HREF="sweep083.htm#wininet_0008000104000700" TARGET=TEXT>FtpPutFile</A>, <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A>, and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> functions utilize this flag.
</DD><DT> INTERNET_FLAG_RAW_DATA
 </DT><DD>Return the data as a <A HREF="sweep088.htm#wininet_0008000109000200" TARGET=TEXT>GOPHER_FIND_DATA</A> structure when retrieving Gopher directory information, or as a <B>WIN32_FIND_DATA</B> structure when retrieving FTP directory information using the <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> API.

</DD><DT>INTERNET_FLAG_EXISTING_CONNECT
 </DT><DD>Attempt to use an existing <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A> object if one exists with the same attributes required to make the request. Only the <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> function uses this flag. 
</DD><DT>INTERNET_FLAG_ASYNC
 </DT><DD>Make only asynchronous requests on handles descended from the handle returned from this function. Only the <A HREF="sweep082.htm#wininet_0008000103000c00" TARGET=TEXT>InternetOpen</A> function uses this flag.
</DD><DT>INTERNET_FLAG_PASSIVE
 </DT><DD>Use passive FTP semantics. Only <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A> and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> use this flag. <A HREF="sweep082.htm#wininet_0008000103000500" TARGET=TEXT>InternetConnect</A> uses this flag for FTP requests, and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> uses this flag for FTP files and directories.
</DD><DT>INTERNET_FLAG_NO_CACHE_WRITE
 </DT><DD>Do not add the returned entity to the cache. This flag is used by <A HREF="sweep084.htm#wininet_0008000105000300" TARGET=TEXT>GopherFindFirstFile</A>, <A HREF="sweep084.htm#wininet_0008000105000600" TARGET=TEXT>GopherOpenFile</A>, <A HREF="sweep083.htm#wininet_0008000104000300" TARGET=TEXT>FtpFindFirstFile</A>, <A HREF="sweep083.htm#wininet_0008000104000500" TARGET=TEXT>FtpGetFile</A>, <A HREF="sweep083.htm#wininet_0008000104000700" TARGET=TEXT>FtpPutFile</A>, <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A>, and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A>.
</DD><DT>INTERNET_FLAG_MAKE_PERSISTENT
 </DT><DD>Add the returned entity to the cache as a persistent entity. This means that standard cache cleanup, consistency checking, or garbage collection cannot remove this item from the cache. This flag is used by <A HREF="sweep084.htm#wininet_0008000105000300" TARGET=TEXT>GopherFindFirstFile</A>, <A HREF="sweep084.htm#wininet_0008000105000600" TARGET=TEXT>GopherOpenFile</A>, <A HREF="sweep083.htm#wininet_0008000104000300" TARGET=TEXT>FtpFindFirstFile</A>, <A HREF="sweep083.htm#wininet_0008000104000500" TARGET=TEXT>FtpGetFile</A>, <A HREF="sweep083.htm#wininet_0008000104000600" TARGET=TEXT>FtpOpenFile</A>, <A HREF="sweep083.htm#wininet_0008000104000700" TARGET=TEXT>FtpPutFile</A>, <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A>, and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A>.
</DD><DT>INTERNET_FLAG_OFFLINE
 </DT><DD>Do not make network requests. All entities are returned from the cache. If the requested item is not in the cache, a suitable error, such as ERROR_FILE_NOT_FOUND, is returned. Only the <A HREF="sweep082.htm#wininet_0008000103000c00" TARGET=TEXT>InternetOpen</A> function uses this flag. 
</DD><DT>INTERNET_FLAG_SECURE
 </DT><DD>Use secure transaction semantics. This translates to using Secure Sockets Layer/Private Communications Technology (SSL/PCT) and is only meaningful in HTTP requests. This flag is used by <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A> and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A>, but this is made redundant if "https://" appears in the URL.
</DD><DT>INTERNET_FLAG_KEEP_CONNECTION
 </DT><DD>Use keep-alive semantics, if available, for the connection. This flag is used by <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A> and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> (for HTTP requests).
</DD><DT>INTERNET_FLAG_NO_AUTO_REDIRECT
 </DT><DD>Do not automatically handle redirection in <A HREF="sweep085.htm#wininet_0008000106000400" TARGET=TEXT>HttpSendRequest</A>. This flag can also be used by <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> for HTTP requests.
</DD><DT>INTERNET_FLAG_IGNORE_CERT_CN_INVALID
 </DT><DD>Disable Win32 Internet function checking of SSL/PCT-based certificates that are returned from the server against the host name given in the request. Win32 Internet functions use a simple check against certificates by comparing for matching host names and simple wildcarding rules. This flag can be used by <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A> and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> (for HTTP requests).
</DD><DT>INTERNET_FLAG_IGNORE_CERT_DATE_INVALID
 </DT><DD>Disable Win32 Internet function checking of SSL/PCT-based certificates for proper validity dates. This flag can be used by <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A> and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> (for HTTP requests).
</DD><DT>INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTPS
 </DT><DD>Disable the ability of the Win32 Internet functions to detect this special type of redirect. When this flag is used, Win32 Internet functions transparently allow redirects from HTTP to HTTPS URLs. This flag can be used by <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A> and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> (for HTTP requests).
</DD><DT>INTERNET_FLAG_IGNORE_REDIRECT_TO_HTTP
 </DT><DD>Disable the ability of the Win32 Internet functions to detect this special type of redirect. When this flag is used, Win32 Internet functions transparently allow redirects from HTTPS to HTTP URLs. This flag can be used by <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A> and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> (for HTTP requests).
</DD><DT>INTERNET_FLAG_READ_PREFETCH
 </DT><DD>Download the entity without requiring the application to initiate reads from the network. This flag can be used by <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A> and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> (for HTTP requests).
</DD><DT>INTERNET_FLAG_NO_COOKIES
 </DT><DD>Do not automatically add cookie headers to requests, and do not automatically add returned cookies to the cookie database. This flag can be used by <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A> and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> (for HTTP requests). 
</DD><DT>INTERNET_FLAG_NO_AUTH
 </DT><DD>Do not attempt authentication automatically. This flag can be used by <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A> and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A> (for HTTP requests).
</DD><DT>INTERNET_FLAG_TRANSFER_ASCII
 </DT><DD>Transfer file as ASCII (FTP only). This flag can be used by <A HREF="sweep083.htm#wininet_0008000104000600" TARGET=TEXT>FtpOpenFile</A>, <A HREF="sweep083.htm#wininet_0008000104000500" TARGET=TEXT>FtpGetFile</A>, and <A HREF="sweep083.htm#wininet_0008000104000700" TARGET=TEXT>FtpPutFile</A>.
</DD><DT>INTERNET_FLAG_TRANSFER_BINARY
 </DT><DD>Transfer file as binary (FTP only). This flag can be used by <A HREF="sweep083.htm#wininet_0008000104000600" TARGET=TEXT>FtpOpenFile</A>, <A HREF="sweep083.htm#wininet_0008000104000500" TARGET=TEXT>FtpGetFile</A>, and <A HREF="sweep083.htm#wininet_0008000104000700" TARGET=TEXT>FtpPutFile</A>.

</DD><DT>INTERNET_FLAG_MUST_CACHE_REQUEST
 </DT><DD>Cause operation to fail if the downloaded file cannot be cached. This flag can be used by <A HREF="sweep084.htm#wininet_0008000105000300" TARGET=TEXT>GopherFindFirstFile</A>, <A HREF="sweep084.htm#wininet_0008000105000600" TARGET=TEXT>GopherOpenFile</A>, <A HREF="sweep083.htm#wininet_0008000104000300" TARGET=TEXT>FtpFindFirstFile</A>, <A HREF="sweep083.htm#wininet_0008000104000500" TARGET=TEXT>FtpGetFile</A>, <A HREF="sweep083.htm#wininet_0008000104000600" TARGET=TEXT>FtpOpenFile</A>, <A HREF="sweep083.htm#wininet_0008000104000700" TARGET=TEXT>FtpPutFile</A>, <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A>, and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A>.
</DD><DT>INTERNET_FLAG_RESYNCHRONIZE
 </DT><DD>Perform a conditional download of the file. This flag can be used by <A HREF="sweep084.htm#wininet_0008000105000300" TARGET=TEXT>GopherFindFirstFile</A>, <A HREF="sweep084.htm#wininet_0008000105000600" TARGET=TEXT>GopherOpenFile</A>, <A HREF="sweep083.htm#wininet_0008000104000300" TARGET=TEXT>FtpFindFirstFile</A>, <A HREF="sweep083.htm#wininet_0008000104000500" TARGET=TEXT>FtpGetFile</A>, <A HREF="sweep083.htm#wininet_0008000104000600" TARGET=TEXT>FtpOpenFile</A>, <A HREF="sweep083.htm#wininet_0008000104000700" TARGET=TEXT>FtpPutFile</A>, <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A>, and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A>.
</DD><DT>INTERNET_FLAG_HYPERLINK
 </DT><DD>Force a reload if there was no Expires time and no Last-Modified time returned from the server when determining whether to reload the item from the network. This flag can be used by <A HREF="sweep084.htm#wininet_0008000105000300" TARGET=TEXT>GopherFindFirstFile</A>, <A HREF="sweep084.htm#wininet_0008000105000600" TARGET=TEXT>GopherOpenFile</A>, <A HREF="sweep083.htm#wininet_0008000104000300" TARGET=TEXT>FtpFindFirstFile</A>, <A HREF="sweep083.htm#wininet_0008000104000500" TARGET=TEXT>FtpGetFile</A>, <A HREF="sweep083.htm#wininet_0008000104000600" TARGET=TEXT>FtpOpenFile</A>, <A HREF="sweep083.htm#wininet_0008000104000700" TARGET=TEXT>FtpPutFile</A>, <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A>, and <A HREF="sweep082.htm#wininet_0008000103000d00" TARGET=TEXT>InternetOpenUrl</A>.
</DD></DL>
<H3><A NAME="wininet_0008000102070000">Context Values</A></H3>
<P>Many of the Win32 Internet functions that create a handle can also accept an application-defined context value. This context value is associated with the handle until it is closed. For example, you can specify a context value to the <A HREF="sweep085.htm#wininet_0008000106000200" TARGET=TEXT>HttpOpenRequest</A> function that will be used in all callbacks made for requests against this handle. If the INTERNET_FLAG_ASYNC flag is specified, supplying a zero context value forces the request to be synchronous.




<H3><A NAME="wininet_0008000102080000">Asynchronous Support</A></H3>
<P>By default, the Win32 Internet functions operate synchronously. An application can request asynchronous operation by setting the INTERNET_FLAG_ASYNC flag in the call to the <A HREF="sweep082.htm#wininet_0008000103000c00" TARGET=TEXT>InternetOpen</A> function. All future calls made against handles derived from the handle returned from <A HREF="sweep082.htm#wininet_0008000103000c00" TARGET=TEXT>InternetOpen</A> will be made asynchronously.

<P>The rationale for asynchronous versus synchronous operation is to allow a single-threaded application to maximize its utilization of the CPU without having to wait for network I/O to complete. Therefore, depending on the request, the operation may complete synchronously or asynchronously. The application should check the return code. If a function returns FALSE or NULL, and <B>GetLastError</B> returns ERROR_IO_PENDING, the request has been made asynchronously, and the application will be called back with INTERNET_STATUS_REQUEST_COMPLETE when the function has completed.

<P>For an application to be able to make requests asynchronously, it must set the INTERNET_FLAG_ASYNC flag in the call to <A HREF="sweep082.htm#wininet_0008000103000c00" TARGET=TEXT>InternetOpen</A>, it must register a valid callback function, and it must supply a non-zero context value.




<H3><A NAME="wininet_0008000102090000">Persistent Caching</A></H3>
<P>Win32 Internet functions have built-in caching support that is simple yet flexible. Any data that is retrieved from the network is cached on the hard disk and retrieved for subsequent requests. The caller has the option of controlling the caching on a per-request basis. In the case of HTTP, most headers received from the server are also cached. When an HTTP request is satisfied from the cache, the cached headers are also returned to the caller. This makes data download from Win32 Internet functions seamless, whether it is coming from the cache or from the wire.







<H3><A NAME="wininet_00080001020a0000">Buffers and Buffer Parameters</A></H3>
<P>For the APIs that return strings, there is an input <I>lpszBuffer</I> parameter and an <I>lpdwBufferLength</I> parameter. The <I>lpszBuffer</I> can be NULL, and <I>lpdwBufferLength</I> must be a valid pointer to a DWORD variable. If the input buffer pointed to by <I>lpszBuffer</I> is either too small to hold the output string or NULL, a failure indication will be returned by the API and <B>GetLastError</B> will return ERROR_INSUFFICIENT_BUFFER. The variable pointed to by <I>lpdwBufferLength</I> will contain a number that represents the number of bytes that are required by the function to return the requested string, which includes the NUL terminator. The application should allocate a buffer of this size, set the variable pointed to by <I>lpdwBufferLength</I> to this value, and resubmit the request. If the size of the buffer is sufficient to receive the requested string, the string is copied to the output buffer with a NUL terminator and a success indication is returned by the API. The variable pointed to by <I>lpdwBufferLength</I> will now contain the number of characters stored in the buffer, excluding the NUL terminator.





<TABLE BORDER=0 ALIGN=RIGHT><TR><TD VALIGN=TOP>
<A HREF="sweep080.htm" TARGET="TEXT"><IMG SRC="art/previous.gif" WIDTH="50" HEIGHT="20"  BORDER=0 ALT="Previous"></A>
</TD>
<TD VALIGN=TOP><A HREF="sweep000.htm" TARGET="TEXT"><IMG SRC="art/contents.gif" WIDTH="50" HEIGHT="20"  BORDER=0 ALT="Up"></A>
</TD>
<TD VALIGN=TOP><A HREF="index.htm" TARGET="TEXT"><IMG SRC="art/index.gif" WIDTH="50" HEIGHT="20"  BORDER=0 ALT="Index"></A>
</TD>
<TD VALIGN=TOP><A HREF="sweep082.htm" TARGET="TEXT"><IMG SRC="art/next.gif" WIDTH="50" HEIGHT="20"  BORDER=0 ALT="Next"></A>
</TD></TABLE>
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A ID=cpslug HREF="legal.htm" TARGET=TEXT>&#169; 1996 Microsoft Corporation</A>
</FONT>
<BR CLEAR=ALL>
</FONT><P>
</BODY></HTML>
